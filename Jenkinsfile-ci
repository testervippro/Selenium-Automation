pipeline {
    agent any

    environment {
        // Define Maven home path
        MAVEN_HOME = ''
    }

    options {
        // Enable withBuildUser to capture the build user
        withBuildUser()
    }

    stages {
        stage('Preparation') {
            steps {
                script {
                    // Set MAVEN_HOME using the Maven tool configured in Jenkins
                    MAVEN_HOME = tool name: 'maven', type: 'maven'
                    echo "Maven Home: ${MAVEN_HOME}"
                }
            }
        }

        stage('Build') {
            steps {
                script {
                    // Run Maven clean and package (skip tests)
                    sh "${MAVEN_HOME}/bin/mvn clean -DskipTests=true"
                }
            }
        }

        stage('Test Execution') {
            steps {
                script {
                    // Run Maven tests with specific profiles and parameters
                    sh "${MAVEN_HOME}/bin/mvn test -Pweb-execution -Dsuite=local-suite -Dtarget=local-suite -Dheadless=true -Dbrowser=chrome"
                }
            }
        }
    }

    post {
        always {
            script {
                // Generate Allure report
                allure([
                    results: [[path: 'target/allure-results']],
                    reportBuildPolicy: 'ALWAYS',
                    includeProperties: false
                ])

                // Get additional environment information
                def gitBranch = env.GIT_BRANCH ?: 'Unknown'
                def gitCommit = env.GIT_COMMIT ?: 'Unknown'
                def gitCommitMessage = sh(script: 'git log -1 --pretty=%B', returnStdout: true).trim()
                def buildExecutor = env.BUILD_USER ?: 'Unknown' // Get the build user from withBuildUser

                // Send email notification
                def emailRecipient = 'cuxuanthoai@gmail.com'
                def emailSubject = "[Jenkins Build] ${env.JOB_NAME} - ${currentBuild.currentResult} - (#${env.BUILD_NUMBER})"
                def emailBody = """
                    <html>
                        <body>
                            <p>Hello,</p>
                            <p>The Jenkins build for <strong>${env.JOB_NAME}</strong> (#${env.BUILD_NUMBER}) has completed.</p>
                            <ul>
                                <li><strong>Status:</strong> ${currentBuild.currentResult}</li>
                                <li><strong>Build Duration:</strong> ${currentBuild.durationString}</li>
                                <li><strong>Jenkins Server:</strong> <a href="https://ed1f-116-96-46-98.ngrok-free.app">Visit Jenkins</a></li>
                                <li><strong>Allure Report:</strong> <a href="https://ed1f-116-96-46-98.ngrok-free.app/job/${env.JOB_NAME}/${env.BUILD_NUMBER}/allure">View Allure Report</a></li>
                                <li><strong>Build URL:</strong> <a href="${env.BUILD_URL}">Open Build Details</a></li>
                                <li><strong>Git Branch:</strong> ${gitBranch}</li>
                                <li><strong>Git Commit:</strong> ${gitCommit}</li>
                                <li><strong>Git Commit Message:</strong> ${gitCommitMessage}</li>
                                <li><strong>Build Executor:</strong> ${buildExecutor}</li>
                            </ul>
                            <p>Best regards,<br><strong>testervippro</strong></p>
                        </body>
                    </html>
                """

                mail(
                    to: emailRecipient,
                    subject: emailSubject,
                    body: emailBody,
                    mimeType: 'text/html'
                )
            }
        }

        success {
            echo 'Tests completed successfully!'
        }

        failure {
            echo 'Tests failed!'
        }
    }
}
